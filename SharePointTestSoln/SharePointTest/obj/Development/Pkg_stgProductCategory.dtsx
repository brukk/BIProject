<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/26/2019 5:07:16 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-50T1H82M"
  DTS:CreatorName="LAPTOP-50T1H82M\Biruk"
  DTS:DTSID="{87D7FCB5-6D81-4BC6-BFE0-EBF47B2C5563}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="1033"
  DTS:ObjectName="Pkg_stgProductCategory"
  DTS:PackageType="5"
  DTS:VersionBuild="41"
  DTS:VersionGUID="{F9A93C90-21EB-4E1B-95A2-7A7A9C575906}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{962BFEF3-DA09-4600-B872-1014F3D018DD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3458B0D3-2637-46DF-91B9-5F7E7DC09402}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="VarValue">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - End Time Logging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{df388040-0d98-4710-be32-36beffd68bba}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - End Time Logging"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="$Project::ParEndLog" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Start time Logging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{d15bd47f-0b16-4385-a8ac-b915ea4e8b25}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Start time Logging"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Execute SQL Task - Start time Logging.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{3d786a4c-5607-4cd8-ba4f-5eda5910e703}"
          DTS:EventID="393236"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{5504f365-37e6-4e96-a5e9-28acaf26e99a}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="$Project::ParStartLog" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::PackageID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="System::PackageName"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Email End Notification"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2f9ae11d-4085-454a-9980-26f508ef5a92}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Email End Notification"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Script Task - Email End Notification.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{7d734d9c-057e-42c6-9296-23f413c25d6e}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{d203eb8e-b7c9-430c-a77e-84814952041f}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0f8964b59eaa490493b4d747fcb6592f"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::PackageName,System::StartTime,User::VarRowCount,$Project::ParEmailFrom,$Project::ParEmailTo">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_0f8964b59eaa490493b4d747fcb6592f.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ba38855a-9de9-46a6-a589-5aa861552692}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e6765987cbdb4366b385d86b362cd7d4</RootNamespace><AssemblyName>ST_0f8964b59eaa490493b4d747fcb6592f</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST140</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion
using System.Net.Mail;

using System.Net;
namespace ST_e6765987cbdb4366b385d86b362cd7d4
    
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String SendMailFrom = Dts.Variables["$Project::ParEmailFrom"].Value.ToString();
            String SendMailTo = Dts.Variables["$Project::ParEmailTo"].Value.ToString();
            String SendMailSubject = "Notification Regarding " + Dts.Variables["System::PackageName"].Value.ToString() + " Package";
            String SendMailBody = "Package name: " + Dts.Variables["System::PackageName"].Value.ToString() + "\n" +
                                  "Row imported: " + Dts.Variables["User::VarRowCount"].Value.ToString() + "\n" +
                                              "End time: " + Dts.Variables["System::StartTime"].Value.ToString();

            try
            {
                MailMessage email = new MailMessage();
                SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com");
                // START
                email.From = new MailAddress(SendMailFrom);
                email.To.Add(SendMailTo);
                email.Subject = SendMailSubject;
                email.Body = SendMailBody;
                //END

                SmtpServer.Port = 587;
                SmtpServer.Credentials = new System.Net.NetworkCredential(SendMailFrom, "0911948146");
                SmtpServer.EnableSsl = true;

                SmtpServer.Send(email);
                MessageBox.Show("Email was Successfully Sent ");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_7dd47f4a1469491497f1900817c5d23d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_7dd47f4a1469491497f1900817c5d23d</msb:DisplayName>
    <msb:ProjectId>{001DDF8E-DB49-4F4B-B1BE-64E019911190}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_0f8964b59eaa490493b4d747fcb6592f.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Settings.get_Default():ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Sett" +
    "ings")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_7dd47f4a1469491497f1900817c5d23d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMvn2lwAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA2jIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIgyAABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
MgAAAAAAAEgAAAACAAUAXCIAAHQPAAABAAAAAAAAANAxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQCFAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyLwAAcG8SAAAKbxMAAApvFAAACgtyWQAAcAIoEAAACm8RAAAK
cokAAHBvEgAACm8TAAAKbxQAAApysQAAcCgVAAAKDByNHQAAASUWcsMAAHCiJRcCKBAAAApvEQAA
CnKJAABwbxIAAApvEwAACm8UAAAKoiUYcuEAAHCiJRkCKBAAAApvEQAACnIBAQBwbxIAAApvEwAA
Cm8UAAAKoiUaciUBAHCiJRsCKBAAAApvEQAACnI9AQBwbxIAAApvEwAACm8UAAAKoigWAAAKDXMX
AAAKEwRyYQEAcHMYAAAKEQQGcxkAAApvGgAAChEEbxsAAAoHbxwAAAoRBAhvHQAAChEECW8eAAAK
JSBLAgAAbx8AAAolBnJ/AQBwcyAAAApvIQAACiUXbyIAAAoRBG8jAAAKcpUBAHAoJAAACibeDW8U
AAAKKCQAAAom3gACKBAAAAoWbyUAAAoqAAAAARAAAAAA+QByawENEAAAAR4CKCYAAAoqHgIoJwAA
CiqufgEAAAQtHnLPAQBw0AMAAAIoKAAACm8pAAAKcyoAAAqAAQAABH4BAAAEKhp+AgAABCoeAoAC
AAAEKhp+AwAABCoeAigrAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAbAQAACN+AADYBAAAkAYAACNTdHJpbmdzAAAAAGgLAABEAgAAI1VTAKwNAAAQ
AAAAI0dVSUQAAAC8DQAAuAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACcA
AAAFAAAABgAAAAkAAAABAAAAKwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAA
AAEAAAAAANADAQAAAAAABgBeAt4EBgDtAt4EBgCqAcsEDwBSBQAABgDXAWUEBgBBAmUEBgAiAmUE
BgDUAmUEBgB+AmUEBgCXAmUEBgDuAWUEBgAJAhsDCgCyAl0DCgApAV0DDgCbAMADBgCNBA8EBgAf
BA8EBgCNAcsEBgD9BQ8EBgCuBP4EBgCeBFAEDgBdAaoDDgC+AaoDDgBFATsEBgByAd4ECgCYA10D
EgCUBdQAEgCnANQABgA3Aw8EDgBDBsADDgDUBcADDgB3BMADDgCGAxAGDgBXBhAGFgBvBrcFFgAn
BrcFBgD0AA8EBgCwAA8EBgCHBmUEAAAAACUAAAAAAAEAAQABABAAMAQBADkAAQABAAAAEAAFBWEF
TQABAAMAAAEQAJ4FYQVhAAMABwADAQAA6AUAAEUABAAKABEAJASnABEAGQGrABEAiwCvAAYGTQCz
AFaAzAW2AFaA+QC2AFAgAAAAAIYANgQGAAEA9CEAAAAAhhi+BAYAAQD8IQAAAACDGL4EBgABAAQi
AAAAAJMIqgS6AAEAMCIAAAAAkwgBAb8AAQA3IgAAAACTCA0BxAABAD8iAAAAAJYIGwbKAAIARiIA
AAAAhhi+BAYAAgBOIgAAAACRGMQEzwACAAAAAQAVAwkAvgQBABEAvgQGABkAvgQKACkAvgQQADEA
vgQQADkAvgQQAEEAvgQQAEkAvgQQAFEAvgQQAFkAvgQQAGEAvgQQAGkAvgQGAJEAvgQGALkAvgQV
AMkAvgQGAHEA4AUkANEAkAUpANkABgQuAOEACwM0AJkANQM4AOkA9gU8AOkA9gVDAHkAvgQGAPEA
vgQQAPkAvgQQAHkAFgRJAHkAlwRPAAEBggAQAHkABAYQAHkAegYQAPEATgYBAAkBvgRVAPEApwVb
APEA+ANiAPEAhgBnABkBagZtANEANAYBAHEAvgQGAJkAvgQGACkBwgB0ACkBgwZ9AKEAvgSDAMEA
vgQGAAgAFACdAAgAGACiACkAcwAKAS4ACwDiAC4AEwDrAC4AGwAKAS4AIwATAS4AKwA8AS4AMwA8
AS4AOwBCAS4AQwATAS4ASwBPAS4AUwA8AS4AWwBtAUMAYwCiAEkAcwAKAWEAewCiAGMAawCiABsA
AwABAAQAAwAAAK4E0wAAACEB2AAAAB8G3QACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAA
AKEbRVUAAAAAAABeAAAABAAAAAAAAAAAAAAAiwBVAAAAAAAOAAAAAAAAAAAAAACUAD4DAAAAAAQA
AAAAAAAAAAAAAIsADwQAAAAADgAAAAAAAAAAAAAAlAAuAAAAAAAEAAAAAAAAAAAAAACLALcFAAAA
AAAAAAABAAAADwUAAAUAAgAAAABTVF9lNjc2NTk4N2NiZGI0MzY2YjM4NWQ4NmIzNjJjZDdkNAA8
TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBT
VF83ZGQ0N2Y0YTE0Njk0OTE0OTdmMTkwMDgxN2M1ZDIzZABBZGQAU2VuZABkZWZhdWx0SW5zdGFu
Y2UATWFpbE1lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
Z2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9z
b2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNj
cmlwdFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFN5c3RlbS5OZXQuTWFpbABTVF83ZGQ0N2Y0YTE0Njk0OTE0OTdmMTkwMDgxN2M1
ZDIzZC5kbGwAc2V0X0VuYWJsZVNzbABnZXRfSXRlbQBTeXN0ZW0Ac2V0X0Zyb20ARW51bQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5SZWZsZWN0aW9uAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBFeGNlcHRpb24AZ2V0
X1RvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU1RfZTY3NjU5ODdjYmRiNDM2NmIzODVkODZiMzYyY2Q3ZDQuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2U2NzY1OTg3Y2JkYjQzNjZiMzg1ZDg2YjM2
MmNkN2Q0LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMA
U3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAQ29uY2F0AE9iamVjdABzZXRfU3ViamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AERp
YWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AHNldF9Qb3J0AElDcmVkZW50aWFs
c0J5SG9zdABTaG93AE1lc3NhZ2VCb3gAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AAAtJABQAHIAbwBq
AGUAYwB0ADoAOgBQAGEAcgBFAG0AYQBpAGwARgByAG8AbQAAKSQAUAByAG8AagBlAGMAdAA6ADoA
UABhAHIARQBtAGEAaQBsAFQAbwAAL04AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAAUgBlAGcAYQBy
AGQAaQBuAGcAIAAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAABEgAFAA
YQBjAGsAYQBnAGUAAB1QAGEAYwBrAGEAZwBlACAAbgBhAG0AZQA6ACAAAB8KAFIAbwB3ACAAaQBt
AHAAbwByAHQAZQBkADoAIAAAI1UAcwBlAHIAOgA6AFYAYQByAFIAbwB3AEMAbwB1AG4AdAAAFwoA
RQBuAGQAIAB0AGkAbQBlADoAIAAAI1MAeQBzAHQAZQBtADoAOgBTAHQAYQByAHQAVABpAG0AZQAA
HXMAbQB0AHAALgBnAG0AYQBpAGwALgBjAG8AbQAAFTAAOQAxADEAOQA0ADgAMQA0ADYAADlFAG0A
YQBpAGwAIAB3AGEAcwAgAFMAdQBjAGMAZQBzAHMAZgB1AGwAbAB5ACAAUwBlAG4AdAAgAABxUwBU
AF8AZQA2ADcANgA1ADkAOAA3AGMAYgBkAGIANAAzADYANgBiADMAOAA1AGQAOAA2AGIAMwA2ADIA
YwBkADcAZAA0AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAACp
UssNqhhKRptxP6fmCnaPAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZCAcFDg4ODhI9BCAAEmkE
IAASbQUgARJxHAMgABwDIAAOBgADDg4ODgUAAQ4dDgUgAQESfQUgABKAgQUgAgEODgYgAQESgIkE
IAEBAgUgAQESPQYAARGAkQ4IAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTgiQiJhF3NgIDM
kQQAAAAABAEAAAADBhJRAwYSVQMGEhACBggDBhEUBAAAElEEAAASVQUAAQESVQQAABIQAwAAAQQI
ABJRBAgAElUECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU1RfZTY3NjU5ODdjYmRiNDM2NmIzODVkODZiMzYyY2Q3ZDQAAAUBAAAAAAwBAAdI
UCBJbmMuAAAdAQAYQ29weXJpZ2h0IEAgSFAgSW5jLiAyMDE5AABJAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAAsDIAAAAAAAAAAAAAyjIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALwyAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA2BAAAAAAAAAAAAAA2BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEARVWhGwAAAQBFVaEbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAElgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAcgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADAACAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwBlADYANwA2ADUAOQA4ADcAYwBiAGQAYgA0ADMANgA2AGIAMwA4
ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANwAwADcAMwAuADIAMQA4ADIAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAFQAXwA3AGQAZAA0ADcAZgA0AGEAMQA0ADYAOQA0ADkAMQA0ADkANwBmADEA
OQAwADAAOAAxADcAYwA1AGQAMgAzAGQALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgAEkAbgBjAC4AIAAyADAA
MQA5AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA3AGQAZAA0ADcAZgA0AGEA
MQA0ADYAOQA0ADkAMQA0ADkANwBmADEAOQAwADAAOAAxADcAYwA1AGQAMgAzAGQALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQA2ADcANgA1ADkAOAA3AGMA
YgBkAGIANAAzADYANgBiADMAOAA1AGQAOAA2AGIAMwA2ADIAYwBkADcAZAA0AAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAANwAzAC4AMgAxADgAMgA5AAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAANwAz
AC4AMgAxADgAMgA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA3DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Email Start Notification"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{4c4ebe59-637b-4833-898d-6c8582f27894}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Email Start Notification"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Script Task - Email Start Notification.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{5ed35c35-b0a9-491d-a6db-f452816704d7}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{af6c23f4-1a22-4617-824b-310e51433075}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_3c39480bff804cdf8d0949189a5ecd16"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::PackageName,System::StartTime,$Project::ParEmailFrom,$Project::ParEmailTo">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_3c39480bff804cdf8d0949189a5ecd16.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ba38855a-9de9-46a6-a589-5aa861552692}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e6765987cbdb4366b385d86b362cd7d4</RootNamespace><AssemblyName>ST_3c39480bff804cdf8d0949189a5ecd16</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST140</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion
using System.Net.Mail;

using System.Net;
namespace ST_e6765987cbdb4366b385d86b362cd7d4
    
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String SendMailFrom = Dts.Variables["$Project::ParEmailFrom"].Value.ToString();
            String SendMailTo = Dts.Variables["$Project::ParEmailTo"].Value.ToString();
            String SendMailSubject = "Notification Regarding " + Dts.Variables["System::PackageName"].Value.ToString() + " Package";
            String SendMailBody = "Package name: " + Dts.Variables["System::PackageName"].Value.ToString() + "\n" +
                                  "Start time: " + Dts.Variables["System::StartTime"].Value.ToString();

            try
            {
                MailMessage email = new MailMessage();
                SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com");
                // START
                email.From = new MailAddress(SendMailFrom);
                email.To.Add(SendMailTo);
                email.Subject = SendMailSubject;
                email.Body = SendMailBody;
                //END

                SmtpServer.Port = 587;
                SmtpServer.Credentials = new System.Net.NetworkCredential(SendMailFrom, "0911948146");
                SmtpServer.EnableSsl = true;

                SmtpServer.Send(email);
                MessageBox.Show("Email was Successfully Sent ");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_199ec06fe79b41a994c7d16964733ab4</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_199ec06fe79b41a994c7d16964733ab4</msb:DisplayName>
    <msb:ProjectId>{2887CA25-5827-44A7-BD74-510DD635A5B2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_3c39480bff804cdf8d0949189a5ecd16.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Settings.get_Default():ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Sett" +
    "ings")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_199ec06fe79b41a994c7d16964733ab4.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALzl2lwAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAYjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAyAABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
MgAAAAAAAEgAAAACAAUAICIAADgPAAABAAAAAAAAAFgxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQBJAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyLwAAcG8SAAAKbxMAAApvFAAACgtyWQAAcAIoEAAACm8RAAAK
cokAAHBvEgAACm8TAAAKbxQAAApysQAAcCgVAAAKDHLDAABwAigQAAAKbxEAAApyiQAAcG8SAAAK
bxMAAApvFAAACnLhAABwAigQAAAKbxEAAApy/QAAcG8SAAAKbxMAAApvFAAACigWAAAKDXMXAAAK
EwRyIQEAcHMYAAAKEQQGcxkAAApvGgAAChEEbxsAAAoHbxwAAAoRBAhvHQAAChEECW8eAAAKJSBL
AgAAbx8AAAolBnI/AQBwcyAAAApvIQAACiUXbyIAAAoRBG8jAAAKclUBAHAoJAAACibeDW8UAAAK
KCQAAAom3gACKBAAAAoWbyUAAAoqAAAAARAAAAAAvQByLwENEAAAAR4CKCYAAAoqHgIoJwAACiqu
fgEAAAQtHnKPAQBw0AMAAAIoKAAACm8pAAAKcyoAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAE
Khp+AwAABCoeAigrAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkA
AAAABQBsAAAAbAQAACN+AADYBAAAkAYAACNTdHJpbmdzAAAAAGgLAAAEAgAAI1VTAGwNAAAQAAAA
I0dVSUQAAAB8DQAAvAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACcAAAAF
AAAABgAAAAkAAAABAAAAKwAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEA
AAAAANADAQAAAAAABgBeAt4EBgDtAt4EBgCqAcsEDwBSBQAABgDXAWUEBgBBAmUEBgAiAmUEBgDU
AmUEBgB+AmUEBgCXAmUEBgDuAWUEBgAJAhsDCgCyAl0DCgApAV0DDgCbAMADBgCNBA8EBgAfBA8E
BgCNAcsEBgD9BQ8EBgCuBP4EBgCeBFAEDgBdAaoDDgC+AaoDDgBFATsEBgByAd4ECgCYA10DEgCU
BdQAEgCnANQABgA3Aw8EDgBDBsADDgDUBcADDgB3BMADDgCGAxAGDgBXBhAGFgBvBrcFFgAnBrcF
BgD0AA8EBgCwAA8EBgCHBmUEAAAAAEkAAAAAAAEAAQABABAAMAQlADkAAQABAAAAEAAFBWEFTQAB
AAMAAAEQAJ4FYQVhAAMABwADAQAA6AUAAEUABAAKABEAJASpABEAGQGtABEAiwCxAAYGcQC1AFaA
zAW4AFaA+QC4AFAgAAAAAIYANgQGAAEAuCEAAAAAhhi+BAYAAQDAIQAAAACDGL4EBgABAMghAAAA
AJMIqgS8AAEA9CEAAAAAkwgBAcEAAQD7IQAAAACTCA0BxgABAAMiAAAAAJYIGwbMAAIACiIAAAAA
hhi+BAYAAgASIgAAAACRGMQE0QACAAAAAQAVAwkAvgQBABEAvgQGABkAvgQKACkAvgQQADEAvgQQ
ADkAvgQQAEEAvgQQAEkAvgQQAFEAvgQQAFkAvgQQAGEAvgQQAGkAvgQGAJEAvgQGALkAvgQVAMkA
vgQGAHEA4AUkANEAkAUpANkABgQuAOEACwM0AJkANQM4AOkA9gU8AOkA9gVDAHkAvgQGAPEAvgQQ
APkAvgQQAHkAFgRLAHkAlwRRAAEBggAQAHkABAYQAHkAegYQAPEATgYBAAkBvgRXAPEApwVdAPEA
+ANkAPEAhgBpABkBagZvANEANAYBAHEAvgQGAJkAvgQGACkBwgB2ACkBgwZ/AKEAvgSFAMEAvgQG
AAgAFACfAAgAGACkACkAcwAMAS4ACwDkAC4AEwDtAC4AGwAMAS4AIwAVAS4AKwA+AS4AMwA+AS4A
OwBEAS4AQwAVAS4ASwBRAS4AUwA+AS4AWwBvAUMAYwCkAEkAcwAMAWEAewCkAGMAawCkABsAAwAB
AAQAAwAAAK4E1QAAACEB2gAAAB8G3wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAKEb
PlQAAAAAAAABAAAABAAAAAAAAAAAAAAAjQB5AAAAAAAOAAAAAAAAAAAAAACWAD4DAAAAAAQAAAAA
AAAAAAAAAI0ADwQAAAAADgAAAAAAAAAAAAAAlgBSAAAAAAAEAAAAAAAAAAAAAACNALcFAAAAAAAA
AAABAAAADwUAAAUAAgAAAABTVF8xOTllYzA2ZmU3OWI0MWE5OTRjN2QxNjk2NDczM2FiNABTVF9l
Njc2NTk4N2NiZGI0MzY2YjM4NWQ4NmIzNjJjZDdkNAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBBZGQAU2VuZABkZWZhdWx0SW5zdGFuY2UA
TWFpbE1lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0
X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFN5c3RlbS5OZXQuTWFpbABTVF8xOTllYzA2ZmU3OWI0MWE5OTRjN2QxNjk2NDczM2Fi
NC5kbGwAc2V0X0VuYWJsZVNzbABnZXRfSXRlbQBTeXN0ZW0Ac2V0X0Zyb20ARW51bQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBFeGNlcHRpb24AZ2V0X1Rv
AEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U1RfZTY3NjU5ODdjYmRiNDM2NmIzODVkODZiMzYyY2Q3ZDQuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2U2NzY1OTg3Y2JkYjQzNjZiMzg1ZDg2YjM2MmNk
N2Q0LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAU3lz
dGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAQ29uY2F0AE9iamVjdABzZXRfU3ViamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AERpYWxv
Z1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AHNldF9Qb3J0AElDcmVkZW50aWFsc0J5
SG9zdABTaG93AE1lc3NhZ2VCb3gAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AAAtJABQAHIAbwBqAGUA
YwB0ADoAOgBQAGEAcgBFAG0AYQBpAGwARgByAG8AbQAAKSQAUAByAG8AagBlAGMAdAA6ADoAUABh
AHIARQBtAGEAaQBsAFQAbwAAL04AbwB0AGkAZgBpAGMAYQB0AGkAbwBuACAAUgBlAGcAYQByAGQA
aQBuAGcAIAAAJ1MAeQBzAHQAZQBtADoAOgBQAGEAYwBrAGEAZwBlAE4AYQBtAGUAABEgAFAAYQBj
AGsAYQBnAGUAAB1QAGEAYwBrAGEAZwBlACAAbgBhAG0AZQA6ACAAABsKAFMAdABhAHIAdAAgAHQA
aQBtAGUAOgAgAAAjUwB5AHMAdABlAG0AOgA6AFMAdABhAHIAdABUAGkAbQBlAAAdcwBtAHQAcAAu
AGcAbQBhAGkAbAAuAGMAbwBtAAAVMAA5ADEAMQA5ADQAOAAxADQANgAAOUUAbQBhAGkAbAAgAHcA
YQBzACAAUwB1AGMAYwBlAHMAcwBmAHUAbABsAHkAIABTAGUAbgB0ACAAAHFTAFQAXwBlADYANwA2
ADUAOQA4ADcAYwBiAGQAYgA0ADMANgA2AGIAMwA4ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAACRJMyRdyYtJn/Kb
pql6rPcABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkIBwUODg4OEj0EIAASaQQgABJtBSABEnEc
AyAAHAMgAA4GAAMODg4OBwAEDg4ODg4FIAEBEn0FIAASgIEFIAIBDg4GIAEBEoCJBCABAQIFIAEB
Ej0GAAERgJEOCAABEoCVEYCZBSAAEoCdByACAQ4SgJ0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQB
AAAAAwYSUQMGElUDBhIQAgYIAwYRFAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEECAASUQQIABJV
BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUX2U2NzY1OTg3Y2JkYjQzNjZiMzg1ZDg2YjM2MmNkN2Q0AAAFAQAAAAAMAQAHSFAgSW5jLgAA
HQEAGENvcHlyaWdodCBAIEhQIEluYy4gMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAODIAAAAAAAAAAAAAUjIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQyAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA2BAAAAAAAAAAAAAA2BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAPlShGwAAAQA+VKEbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAElgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAcgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADAACAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwBlADYANwA2ADUAOQA4ADcAYwBiAGQAYgA0ADMANgA2AGIAMwA4
ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANwAwADcAMwAuADIAMQA1ADYANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAFQAXwAxADkAOQBlAGMAMAA2AGYAZQA3ADkAYgA0ADEAYQA5ADkANABjADcA
ZAAxADYAOQA2ADQANwAzADMAYQBiADQALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgAEkAbgBjAC4AIAAyADAA
MQA5AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAxADkAOQBlAGMAMAA2AGYA
ZQA3ADkAYgA0ADEAYQA5ADkANABjADcAZAAxADYAOQA2ADQANwAzADMAYQBiADQALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQA2ADcANgA1ADkAOAA3AGMA
YgBkAGIANAAzADYANgBiADMAOAA1AGQAOAA2AGIAMwA2ADIAYwBkADcAZAA0AAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAANwAzAC4AMgAxADUANgA2AAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAANwAz
AC4AMgAxADUANgA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAZDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{32ff7af5-a8ee-445a-8ddc-14b8b92a798b}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task - If Exist"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{dc28742e-31ef-40aa-ac21-42c9848c98aa}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - If Exist"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Data Flow Task - If Exist.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{95981226-002e-4f03-91a5-c357b09c6da8}"
              DTS:EventID="3407923"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{cc51eee3-a27b-49af-9a41-2ba47992003b}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Inputs[Derived Column Input].Columns[ProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ProductCategoryID"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Inputs[Derived Column Input].Columns[ParentProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ParentProductCategoryID"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Inputs[Derived Column Input].Columns[Name]"
                          cachedDataType="nText"
                          cachedName="Name"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[Name]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ProdCateID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ProdCateID]"
                          name="Derived Column ProdCateID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)ProductCategoryID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ParentProdCatID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ParentProdCatID]"
                          name="Derived Column ParentProdCatID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)ParentProductCategoryID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column Name]"
                          name="Derived Column Name"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)(DT_WSTR,50)#{Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[Name]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)(DT_WSTR,50)Name</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="OData Source Component;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Read data from OData services"
                  name="OData Source"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Name of the collection to be retrieved from the service."
                      expressionType="Notify"
                      name="CollectionName">ProductCategory</property>
                    <property
                      dataType="System.Int32"
                      description="The default maximum length for a string that has no maxlength specified in the schema."
                      name="DefaultStringLength">4000</property>
                    <property
                      dataType="System.String"
                      description="Query in the url. "
                      expressionType="Notify"
                      name="Query">$select=ProductCategoryID,ParentProductCategoryID,ProductCategoryName</property>
                    <property
                      dataType="System.String"
                      description="Resource path of the collection to be retrieved from the service."
                      expressionType="Notify"
                      name="ResourcePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="When set to true, use the resource path as requested collection; otherwise, use the collection name."
                      expressionType="Notify"
                      name="UseResourcePath">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.OData</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Connections[Connection]"
                      connectionManagerID="{5B8D63D1-4519-4F7A-AA2B-41491D87D9AF}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OData Source]"
                      description="Connection to OData Service"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output]"
                      name="Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]"
                          name="ProductCategoryID"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]"
                          name="ParentProductCategoryID"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[Name]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryName]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[Name]"
                          name="Name"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryID]"
                          dataType="r8"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].ExternalColumns[ParentProductCategoryID]"
                          dataType="r8"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryName]"
                          dataType="nText"
                          name="ProductCategoryName" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output]"
                      isErrorOut="true"
                      name="Error output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ProductCategoryID]"
                          dataType="r8"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ProductCategoryID]"
                          name="ProductCategoryID" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ParentProductCategoryID]"
                          dataType="r8"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ParentProductCategoryID]"
                          name="ParentProductCategoryID" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ProductCategoryName]"
                          dataType="nText"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ProductCategoryName]"
                          name="ProductCategoryName" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[stgProductCategory]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{2D1F8954-21C8-46E9-AE6F-76CA9BDCCBB7}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.MPSTGT.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Column Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Derived Column Name"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column Name]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Column ProdCateID]"
                          cachedDataType="i4"
                          cachedName="Derived Column ProdCateID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ProdCateID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Column ParentProdCatID]"
                          cachedDataType="i4"
                          cachedName="Derived Column ParentProdCatID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ParentProdCatID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          dataType="i4"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          dataType="i4"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Name" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - Derived Col Err output"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgProductCategoryT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ParentProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ParentProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[Name]"
                          cachedDataType="nText"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output].Columns[Name]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          dataType="r8"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          dataType="r8"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          dataType="nText"
                          name="ProductCategoryName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ContentTypeID]"
                          dataType="nText"
                          name="ContentTypeID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          dataType="nText"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ComplianceAssetId]"
                          dataType="nText"
                          name="ComplianceAssetId" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ContentType]"
                          dataType="nText"
                          name="ContentType" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Modified]"
                          dataType="dbTimeStamp"
                          name="Modified" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Created]"
                          dataType="dbTimeStamp"
                          name="Created" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[CreatedById]"
                          dataType="i4"
                          name="CreatedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedById]"
                          dataType="i4"
                          name="ModifiedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Owshiddenversion]"
                          dataType="i4"
                          name="Owshiddenversion" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Version]"
                          dataType="nText"
                          name="Version" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Path]"
                          dataType="nText"
                          name="Path" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - OData Error output"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgProductCategoryT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ParentProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ParentProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ParentProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ProductCategoryName]"
                          cachedDataType="nText"
                          cachedName="ProductCategoryName"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output].Columns[ProductCategoryName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          dataType="r8"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          dataType="r8"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          dataType="nText"
                          name="ProductCategoryName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ContentTypeID]"
                          dataType="nText"
                          name="ContentTypeID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          dataType="nText"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ComplianceAssetId]"
                          dataType="nText"
                          name="ComplianceAssetId" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ContentType]"
                          dataType="nText"
                          name="ContentType" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Modified]"
                          dataType="dbTimeStamp"
                          name="Modified" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Created]"
                          dataType="dbTimeStamp"
                          name="Created" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[CreatedById]"
                          dataType="i4"
                          name="CreatedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedById]"
                          dataType="i4"
                          name="ModifiedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Owshiddenversion]"
                          dataType="i4"
                          name="Owshiddenversion" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Version]"
                          dataType="nText"
                          name="Version" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Path]"
                          dataType="nText"
                          name="Path" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - If Exist\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::VarRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - If Exist\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - If Exist\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - If Exist\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task - If Exist.Paths[Derived Column Error Output]"
                  endId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input]"
                  name="Derived Column Error Output"
                  startId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Error Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - If Exist.Paths[Derived Column Output]"
                  endId="Package\Sequence Container\Data Flow Task - If Exist\Row Count.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - If Exist.Paths[Error output]"
                  endId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input]"
                  name="Error output"
                  startId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Error output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - If Exist.Paths[Output]"
                  endId="Package\Sequence Container\Data Flow Task - If Exist\Derived Column.Inputs[Derived Column Input]"
                  name="Output"
                  startId="Package\Sequence Container\Data Flow Task - If Exist\OData Source.Outputs[Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - If Exist.Paths[Row Count Output 1]"
                  endId="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Sequence Container\Data Flow Task - If Exist\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task - if not Exist"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5f34cd89-30cf-4d12-a016-9c96b187d3bc}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task - if not Exist"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Data Flow Task - if not Exist.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{8a081f45-26ac-4b09-9dd6-89338e1c14e0}"
              DTS:EventID="428743176"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{2948a4c6-a7c2-4c67-9aad-23ffa1238b8c}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Inputs[Derived Column Input].Columns[ProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ProductCategoryID"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Inputs[Derived Column Input].Columns[ParentProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ParentProductCategoryID"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Inputs[Derived Column Input].Columns[Name]"
                          cachedDataType="nText"
                          cachedName="Name"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[Name]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ProdCateID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ProdCateID]"
                          name="Derived Column ProdCateID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)ProductCategoryID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ParentProdCatID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ParentProdCatID]"
                          name="Derived Column ParentProdCatID"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_I4)#{Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_I4)ParentProductCategoryID</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column Name]"
                          name="Derived Column Name"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,50,1252)(DT_WSTR,50)#{Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[Name]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,50,1252)(DT_WSTR,50)Name</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="OData Source Component;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Read data from OData services"
                  name="OData Source"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Name of the collection to be retrieved from the service."
                      expressionType="Notify"
                      name="CollectionName">ProductCategory</property>
                    <property
                      dataType="System.Int32"
                      description="The default maximum length for a string that has no maxlength specified in the schema."
                      name="DefaultStringLength">4000</property>
                    <property
                      dataType="System.String"
                      description="Query in the url. "
                      expressionType="Notify"
                      name="Query">$select=ProductCategoryID,ParentProductCategoryID,ProductCategoryName</property>
                    <property
                      dataType="System.String"
                      description="Resource path of the collection to be retrieved from the service."
                      expressionType="Notify"
                      name="ResourcePath"></property>
                    <property
                      dataType="System.Boolean"
                      description="When set to true, use the resource path as requested collection; otherwise, use the collection name."
                      expressionType="Notify"
                      name="UseResourcePath">false</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.OData</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Connections[Connection]"
                      connectionManagerID="{5B8D63D1-4519-4F7A-AA2B-41491D87D9AF}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OData Source]"
                      description="Connection to OData Service"
                      name="Connection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output]"
                      name="Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]"
                          name="ProductCategoryID"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]"
                          name="ParentProductCategoryID"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[Name]"
                          dataType="nText"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryName]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[Name]"
                          name="Name"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryID]"
                          dataType="r8"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].ExternalColumns[ParentProductCategoryID]"
                          dataType="r8"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].ExternalColumns[ProductCategoryName]"
                          dataType="nText"
                          name="ProductCategoryName" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output]"
                      isErrorOut="true"
                      name="Error output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ProductCategoryID]"
                          dataType="r8"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ProductCategoryID]"
                          name="ProductCategoryID" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ParentProductCategoryID]"
                          dataType="r8"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ParentProductCategoryID]"
                          name="ParentProductCategoryID" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ProductCategoryName]"
                          dataType="nText"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ProductCategoryName]"
                          name="ProductCategoryName" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[stgProductCategory]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{2D1F8954-21C8-46E9-AE6F-76CA9BDCCBB7}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.MPSTGT.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Column Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Derived Column Name"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column Name]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Column ProdCateID]"
                          cachedDataType="i4"
                          cachedName="Derived Column ProdCateID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ProdCateID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Derived Column ParentProdCatID]"
                          cachedDataType="i4"
                          cachedName="Derived Column ParentProdCatID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output].Columns[Derived Column ParentProdCatID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          dataType="i4"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          dataType="i4"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Name" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - Derived Col Err output"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgProductCategoryT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ParentProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ParentProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[ParentProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].Columns[Name]"
                          cachedDataType="nText"
                          cachedName="Name"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output].Columns[Name]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          dataType="r8"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          dataType="r8"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          dataType="nText"
                          name="ProductCategoryName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ContentTypeID]"
                          dataType="nText"
                          name="ContentTypeID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          dataType="nText"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ComplianceAssetId]"
                          dataType="nText"
                          name="ComplianceAssetId" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ContentType]"
                          dataType="nText"
                          name="ContentType" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Modified]"
                          dataType="dbTimeStamp"
                          name="Modified" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Created]"
                          dataType="dbTimeStamp"
                          name="Created" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[CreatedById]"
                          dataType="i4"
                          name="CreatedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedById]"
                          dataType="i4"
                          name="ModifiedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Owshiddenversion]"
                          dataType="i4"
                          name="Owshiddenversion" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Version]"
                          dataType="nText"
                          name="Version" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[Path]"
                          dataType="nText"
                          name="Path" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination - OData Error output"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorStgProductCategoryT]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Connections[OleDbConnection]"
                      connectionManagerID="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}:external"
                      connectionManagerRefId="Project.ConnectionManagers[100.36.220.45,53000.SSIS_Log.baname]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ParentProductCategoryID]"
                          cachedDataType="r8"
                          cachedName="ParentProductCategoryID"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ParentProductCategoryID]" />
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].Columns[ProductCategoryName]"
                          cachedDataType="nText"
                          cachedName="ProductCategoryName"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output].Columns[ProductCategoryName]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryID]"
                          dataType="r8"
                          name="ProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ParentProductCategoryID]"
                          dataType="r8"
                          name="ParentProductCategoryID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ProductCategoryName]"
                          dataType="nText"
                          name="ProductCategoryName" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ContentTypeID]"
                          dataType="nText"
                          name="ContentTypeID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          dataType="nText"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ComplianceAssetId]"
                          dataType="nText"
                          name="ComplianceAssetId" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Id]"
                          dataType="i4"
                          name="Id" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ContentType]"
                          dataType="nText"
                          name="ContentType" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Modified]"
                          dataType="dbTimeStamp"
                          name="Modified" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Created]"
                          dataType="dbTimeStamp"
                          name="Created" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[CreatedById]"
                          dataType="i4"
                          name="CreatedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ModifiedById]"
                          dataType="i4"
                          name="ModifiedById" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Owshiddenversion]"
                          dataType="i4"
                          name="Owshiddenversion" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Version]"
                          dataType="nText"
                          name="Version" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[Path]"
                          dataType="nText"
                          name="Path" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task - if not Exist\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::VarRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task - if not Exist\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Sequence Container\Data Flow Task - if not Exist\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Derived Column Error Output]"
                  endId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output.Inputs[OLE DB Destination Input]"
                  name="Derived Column Error Output"
                  startId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Error Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Derived Column Output]"
                  endId="Package\Sequence Container\Data Flow Task - if not Exist\Row Count.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Error output]"
                  endId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output.Inputs[OLE DB Destination Input]"
                  name="Error output"
                  startId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Error output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Output]"
                  endId="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column.Inputs[Derived Column Input]"
                  name="Output"
                  startId="Package\Sequence Container\Data Flow Task - if not Exist\OData Source.Outputs[Output]" />
                <path
                  refId="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Row Count Output 1]"
                  endId="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Sequence Container\Data Flow Task - if not Exist\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task - Checking Row"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f3c59931-beb4-4587-ad30-47520df3744f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Checking Row"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Execute SQL Task - Checking Row.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{75662718-958e-4f0e-b061-811ea7322281}"
              DTS:EventID="3407923"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{f6b8a095-9eb8-4df6-9a20-01f8a586f686}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="$Project::ParCheckData"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="val"
                SQLTask:DtsVariableName="User::VarValue" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task - Delete"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5fcb0496-7418-412a-bd1e-d3962640aed4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Delete"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,19,OnExecStatusChanged,13,OnInformation</DTS:Property>
            <DTS:Property
              DTS:EventName="OnExecStatusChanged"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">0</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">0</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">0</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">0</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">0</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnInformation"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">0</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">0</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">0</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Execute SQL Task - Delete.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{a5c25f40-8ba0-4e3c-b49f-d2a663b1c166}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{f613831b-b79e-4c22-b312-5d90aacade5e}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="$Project::ParDelete" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Execute SQL Task - Error Demo"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{929cf265-86c8-476b-9aac-7ec67e04f163}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Error Demo"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2D1F8954-21C8-46E9-AE6F-76CA9BDCCBB7}"
              SQLTask:SqlStatementSource="select .." xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{8c3cccee-7865-479c-8b65-cd72b2524fd4}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::VarValue] == 0"
          DTS:From="Package\Sequence Container\Execute SQL Task - Checking Row"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\Data Flow Task - if not Exist" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{ff1aacc2-165c-4513-8197-d4bbfebad116}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::VarValue]  == 1"
          DTS:From="Package\Sequence Container\Execute SQL Task - Checking Row"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Sequence Container\Execute SQL Task - Delete" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{c4b7a151-1e91-4b6f-8aad-95493693e67f}"
          DTS:From="Package\Sequence Container\Execute SQL Task - Delete"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Sequence Container\Data Flow Task - If Exist" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Sequence Container.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{ee8fe182-5464-4311-b8a1-9e20e4f8cc2b}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{d66014d8-2e78-4d59-84a3-2413f8196a5a}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{905625dd-d8ca-425b-ac1d-49c341ccb839}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Task - End Time Logging" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{5D2FB070-ED8F-44B9-BCBD-91CF14ABEC5B}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Script Task - Email End Notification" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{6d1281bb-4345-45f7-a90f-34b5451d2abb}"
      DTS:From="Package\Execute SQL Task - Start time Logging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{9153C168-985F-462D-9CD8-9A2391BD2015}"
      DTS:From="Package\Script Task - Email Start Notification"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Sequence Container" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{173534D2-D00E-4D40-9FC0-3A390D7DB863}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{7FC65A6A-E5D1-45EE-B866-05EF578037A9}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Execute SQL Task - Logging on Error"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b93eab8f-92c5-40ba-a5a4-e805d4beb1df}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Logging on Error">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="$Project::ParErrorLog" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="100" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="System::ErrorCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="20" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="System::ErrorDescription"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Script Task - Email on Error"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{a98bb43d-b327-4692-b03b-25d70a23451d}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Email on Error">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package.EventHandlers[OnError]\Script Task - Email on Error.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{532053d8-ba0b-46a1-b7b4-c7045810942a}"
              DTS:EventID="0"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{aece989d-bf14-400a-8a3c-9e7be8b0a50d}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package.EventHandlers[OnError]\Script Task - Email on Error.EventHandlers[OnError]\Execute SQL Task - End Time Logging"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{91f307be-13ce-44a9-9588-b87155f587b2}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Execute SQL Task - End Time Logging">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{10E9ACE7-54CD-4C6E-BC76-5C6044E97B9F}"
                      SQLTask:SqlStmtSourceType="Variable"
                      SQLTask:SqlStatementSource="User::VarEndTimeLogError" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="System::PackageID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="72"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="System::PackageName"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="100" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="System::ErrorCode"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="20" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="System::ErrorDescription"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_1d93bce0ec754331909f557471b80fe2"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::ErrorDescription,System::SourceName,System::PackageName,System::StartTime,$Project::ParEmailFrom,$Project::ParEmailTo">
              <ProjectItem
                Name="ST_1d93bce0ec754331909f557471b80fe2.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{ba38855a-9de9-46a6-a589-5aa861552692}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e6765987cbdb4366b385d86b362cd7d4</RootNamespace><AssemblyName>ST_1d93bce0ec754331909f557471b80fe2</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST140</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion
using System.Net.Mail;

using System.Net;
namespace ST_e6765987cbdb4366b385d86b362cd7d4
    
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String SendMailFrom = Dts.Variables["$Project::ParEmailFrom"].Value.ToString();
            String SendMailTo = Dts.Variables["$Project::ParEmailTo"].Value.ToString();
            String SendMailSubject = "Notification regarding " + Dts.Variables["System::PackageName"].Value.ToString() + " Package";
            String SendMailBody = "Package name: " + Dts.Variables["System::PackageName"].Value.ToString() + "\n"
                                 + "Task giving Error: " + Dts.Variables["System::SourceName"].Value.ToString() + "\n"
                                 + "Error time: " + Dts.Variables["System::StartTime"].Value.ToString() + "\n"
                                 + "Error message: " + Dts.Variables["System::ErrorDescription"].Value.ToString();

            try
            {
                MailMessage email = new MailMessage();
                SmtpClient SmtpServer = new SmtpClient("smtp.gmail.com");
                // START
                email.From = new MailAddress(SendMailFrom);
                email.To.Add(SendMailTo);
                email.Subject = SendMailSubject;
                email.Body = SendMailBody;
                //END

                SmtpServer.Port = 587;
                SmtpServer.Credentials = new System.Net.NetworkCredential(SendMailFrom, "0911948146");
                SmtpServer.EnableSsl = true;

                SmtpServer.Send(email);
                MessageBox.Show("Email was Successfully Sent ");
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9829f9ceced049f9ae1941df8dbf6596</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9829f9ceced049f9ae1941df8dbf6596</msb:DisplayName>
    <msb:ProjectId>{554A1E22-318C-43DB-B33B-C097D633EED3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1d93bce0ec754331909f557471b80fe2.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Settings.get_Default():ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Sett" +
    "ings")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_e6765987cbdb4366b385d86b362cd7d4")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e6765987cbdb4366b385d86b362cd7d4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e6765987cbdb4366b385d86b362cd7d4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_9829f9ceced049f9ae1941df8dbf6596.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADzp2lwAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAZjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQzAABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
MwAAAAAAAEgAAAACAAUAhCIAANgPAAABAAAAAAAAAFwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQCvAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyLwAAcG8SAAAKbxMAAApvFAAACgtyWQAAcAIoEAAACm8RAAAK
cokAAHBvEgAACm8TAAAKbxQAAApysQAAcCgVAAAKDB6NHQAAASUWcsMAAHCiJRcCKBAAAApvEQAA
CnKJAABwbxIAAApvEwAACm8UAAAKoiUYcuEAAHCiJRkCKBAAAApvEQAACnILAQBwbxIAAApvEwAA
Cm8UAAAKoiUacjEBAHCiJRsCKBAAAApvEQAACnJNAQBwbxIAAApvEwAACm8UAAAKoiUccnEBAHCi
JR0CKBAAAApvEQAACnKTAQBwbxIAAApvEwAACm8UAAAKoigWAAAKDXMXAAAKEwRyxQEAcHMYAAAK
EQQGcxkAAApvGgAAChEEbxsAAAoHbxwAAAoRBAhvHQAAChEECW8eAAAKJSBLAgAAbx8AAAolBnLj
AQBwcyAAAApvIQAACiUXbyIAAAoRBG8jAAAKcvkBAHAoJAAACibeDW8UAAAKKCQAAAom3gACKBAA
AAoWbyUAAAoqAAEQAAAAACMBcpUBDRAAAAEeAigmAAAKKh4CKCcAAAoqrn4BAAAELR5yMwIAcNAD
AAACKCgAAApvKQAACnMqAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoKwAA
CioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGwEAAAj
fgAA2AQAAJAGAAAjU3RyaW5ncwAAAABoCwAAqAIAACNVUwAQDgAAEAAAACNHVUlEAAAAIA4AALgB
AAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAnAAAABQAAAAYAAAAJAAAAAQAA
ACsAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAADQAwEAAAAAAAYA
XgLeBAYA7QLeBAYAqgHLBA8AUgUAAAYA1wFlBAYAQQJlBAYAIgJlBAYA1AJlBAYAfgJlBAYAlwJl
BAYA7gFlBAYACQIbAwoAsgJdAwoAKQFdAw4AmwDAAwYAjQQPBAYAHwQPBAYAjQHLBAYA/QUPBAYA
rgT+BAYAngRQBA4AXQGqAw4AvgGqAw4ARQE7BAYAcgHeBAoAmANdAxIAlAXUABIApwDUAAYANwMP
BA4AQwbAAw4A1AXAAw4AdwTAAw4AhgMQBg4AVwYQBhYAbwa3BRYAJwa3BQYA9AAPBAYAsAAPBAYA
hwZlBAAAAABJAAAAAAABAAEAAQAQADAEAQA5AAEAAQAAABAABQVhBU0AAQADAAABEACeBWEFYQAD
AAcAAwEAAOgFAABFAAQACgARACQEpwARABkBqwARAIsArwAGBnEAswBWgMwFtgBWgPkAtgBQIAAA
AACGADYEBgABABwiAAAAAIYYvgQGAAEAJCIAAAAAgxi+BAYAAQAsIgAAAACTCKoEugABAFgiAAAA
AJMIAQG/AAEAXyIAAAAAkwgNAcQAAQBnIgAAAACWCBsGygACAG4iAAAAAIYYvgQGAAIAdiIAAAAA
kRjEBM8AAgAAAAEAFQMJAL4EAQARAL4EBgAZAL4ECgApAL4EEAAxAL4EEAA5AL4EEABBAL4EEABJ
AL4EEABRAL4EEABZAL4EEABhAL4EEABpAL4EBgCRAL4EBgC5AL4EFQDJAL4EBgBxAOAFJADRAJAF
KQDZAAYELgDhAAsDNACZADUDOADpAPYFPADpAPYFQwB5AL4EBgDxAL4EEAD5AL4EEAB5ABYESQB5
AJcETwABAYIAEAB5AAQGEAB5AHoGEADxAE4GAQAJAb4EVQDxAKcFWwDxAPgDYgDxAIYAZwAZAWoG
bQDRADQGAQBxAL4EBgCZAL4EBgApAcIAdAApAYMGfQChAL4EgwDBAL4EBgAIABQAnQAIABgAogAp
AHMACgEuAAsA4gAuABMA6wAuABsACgEuACMAEwEuACsAPAEuADMAPAEuADsAQgEuAEMAEwEuAEsA
TwEuAFMAPAEuAFsAbQFDAGMAogBJAHMACgFhAHsAogBjAGsAogAbAAMAAQAEAAMAAACuBNMAAAAh
AdgAAAAfBt0AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAChG/5VAAAAAAAAJQAAAAQA
AAAAAAAAAAAAAIsAeQAAAAAADgAAAAAAAAAAAAAAlAA+AwAAAAAEAAAAAAAAAAAAAACLAA8EAAAA
AA4AAAAAAAAAAAAAAJQAUgAAAAAABAAAAAAAAAAAAAAAiwC3BQAAAAAAAAAAAQAAAA8FAAAFAAIA
AAAAU1RfZTY3NjU5ODdjYmRiNDM2NmIzODVkODZiMzYyY2Q3ZDQAU1RfOTgyOWY5Y2VjZWQwNDlm
OWFlMTk0MWRmOGRiZjY1OTYAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRT
AHZhbHVlX18AbXNjb3JsaWIAQWRkAFNlbmQAZGVmYXVsdEluc3RhbmNlAE1haWxNZXNzYWdlAFZh
cmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtD
cmVkZW50aWFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0u
TmV0Lk1haWwAU1RfOTgyOWY5Y2VjZWQwNDlmOWFlMTk0MWRmOGRiZjY1OTYuZGxsAHNldF9FbmFi
bGVTc2wAZ2V0X0l0ZW0AU3lzdGVtAHNldF9Gcm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24ARXhjZXB0aW9uAGdldF9UbwBDdWx0dXJlSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2U2NzY1OTg3Y2Jk
YjQzNjZiMzg1ZDg2YjM2MmNkN2Q0LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9lNjc2NTk4N2NiZGI0MzY2YjM4NWQ4NmIzNjJjZDdkNC5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAFN5c3RlbS5XaW5kb3dzLkZv
cm1zAFN1Y2Nlc3MATWFpbEFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmpl
Y3QAc2V0X1N1YmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rh
c2tSZXN1bHQAU210cENsaWVudABzZXRfUG9ydABJQ3JlZGVudGlhbHNCeUhvc3QAU2hvdwBNZXNz
YWdlQm94AHNldF9Cb2R5AGdldF9Bc3NlbWJseQAALSQAUAByAG8AagBlAGMAdAA6ADoAUABhAHIA
RQBtAGEAaQBsAEYAcgBvAG0AACkkAFAAcgBvAGoAZQBjAHQAOgA6AFAAYQByAEUAbQBhAGkAbABU
AG8AAC9OAG8AdABpAGYAaQBjAGEAdABpAG8AbgAgAHIAZQBnAGEAcgBkAGkAbgBnACAAACdTAHkA
cwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEAbQBlAAARIABQAGEAYwBrAGEAZwBlAAAdUABh
AGMAawBhAGcAZQAgAG4AYQBtAGUAOgAgAAApCgBUAGEAcwBrACAAZwBpAHYAaQBuAGcAIABFAHIA
cgBvAHIAOgAgAAAlUwB5AHMAdABlAG0AOgA6AFMAbwB1AHIAYwBlAE4AYQBtAGUAABsKAEUAcgBy
AG8AcgAgAHQAaQBtAGUAOgAgAAAjUwB5AHMAdABlAG0AOgA6AFMAdABhAHIAdABUAGkAbQBlAAAh
CgBFAHIAcgBvAHIAIABtAGUAcwBzAGEAZwBlADoAIAAAMVMAeQBzAHQAZQBtADoAOgBFAHIAcgBv
AHIARABlAHMAYwByAGkAcAB0AGkAbwBuAAAdcwBtAHQAcAAuAGcAbQBhAGkAbAAuAGMAbwBtAAAV
MAA5ADEAMQA5ADQAOAAxADQANgAAOUUAbQBhAGkAbAAgAHcAYQBzACAAUwB1AGMAYwBlAHMAcwBm
AHUAbABsAHkAIABTAGUAbgB0ACAAAHFTAFQAXwBlADYANwA2ADUAOQA4ADcAYwBiAGQAYgA0ADMA
NgA2AGIAMwA4ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAPuMjVhi6NVEnFzUK74W0AwABCABAQgDIAABBSABARER
BCABAQ4FIAEBEVkIBwUODg4OEj0EIAASaQQgABJtBSABEnEcAyAAHAMgAA4GAAMODg4OBQABDh0O
BSABARJ9BSAAEoCBBSACAQ4OBiABARKAiQQgAQECBSABARI9BgABEYCRDggAARKAlRGAmQUgABKA
nQcgAgEOEoCdCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJVAwYSEAIGCAMGERQE
AAASUQQAABJVBQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lNjc2NTk4N2NiZGI0MzY2YjM4
NWQ4NmIzNjJjZDdkNAAABQEAAAAADAEAB0hQIEluYy4AAB0BABhDb3B5cmlnaHQgQCBIUCBJbmMu
IDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA8MwAAAAAAAAAAAABWMwAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAASDMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAA2BAAAAAAAAAAAAAA2BDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA/lWhGwAAAQD+VaEbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAElgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAcgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAADAACAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwBlADYANwA2ADUAOQA4ADcAYwBiAGQAYgA0ADMANgA2AGIAMwA4
ADUAZAA4ADYAYgAzADYAMgBjAGQANwBkADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANwAwADcAMwAuADIAMgAwADEANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABTAFQAXwA5ADgAMgA5AGYAOQBjAGUAYwBlAGQAMAA0ADkAZgA5AGEAZQAxADkA
NAAxAGQAZgA4AGQAYgBmADYANQA5ADYALgBkAGwAbAAAAFYAGQABAEwAZQBnAGEAbABDAG8AcAB5
AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEgAUAAgAEkAbgBjAC4AIAAyADAA
MQA5AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA5ADgAMgA5AGYAOQBjAGUA
YwBlAGQAMAA0ADkAZgA5AGEAZQAxADkANAAxAGQAZgA4AGQAYgBmADYANQA5ADYALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AZQA2ADcANgA1ADkAOAA3AGMA
YgBkAGIANAAzADYANgBiADMAOAA1AGQAOAA2AGIAMwA2ADIAYwBkADcAZAA0AAAAQgAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAANwAzAC4AMgAyADAAMQA0AAAA
AABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADAANwAz
AC4AMgAyADAAMQA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAaDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="259,42"
          Id="Package\Execute SQL Task - End Time Logging"
          TopLeft="117,340.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Execute SQL Task - Start time Logging"
          TopLeft="113.5,6" />
        <NodeLayout
          Size="195,42"
          Id="Package\Sequence Container\Data Flow Task - If Exist"
          TopLeft="340.5,144" />
        <NodeLayout
          Size="212,42"
          Id="Package\Sequence Container\Data Flow Task - if not Exist"
          TopLeft="9.5,135" />
        <NodeLayout
          Size="240,42"
          Id="Package\Sequence Container\Execute SQL Task - Checking Row"
          TopLeft="102.5,0" />
        <NodeLayout
          Size="204,42"
          Id="Package\Sequence Container\Execute SQL Task - Delete"
          TopLeft="339.5,76" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="183.833333333333,42">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-68.3333333333333,93"
              Start="0,0"
              End="-68.3333333333333,85.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5695364238411" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.5695364238411"
                    Point2="0,37.5695364238411"
                    Point3="-4,37.5695364238411" />
                  <mssgle:LineSegment
                    End="-64.3333333333333,37.5695364238411" />
                  <mssgle:CubicBezierSegment
                    Point1="-64.3333333333333,37.5695364238411"
                    Point2="-68.3333333333333,37.5695364238411"
                    Point3="-68.3333333333333,41.5695364238411" />
                  <mssgle:LineSegment
                    End="-68.3333333333333,85.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-42.1666666666667,42.5695364238411,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="261.166666666667,42">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="180.333333333333,34"
              Start="0,0"
              End="180.333333333333,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.73509933774835" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.73509933774835"
                    Point2="0,13.7350993377483"
                    Point3="4,13.7350993377483" />
                  <mssgle:LineSegment
                    End="176.333333333333,13.7350993377483" />
                  <mssgle:CubicBezierSegment
                    Point1="176.333333333333,13.7350993377483"
                    Point2="180.333333333333,13.7350993377483"
                    Point3="180.333333333333,17.7350993377483" />
                  <mssgle:LineSegment
                    End="180.333333333333,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="82.1666666666667,18.7350993377483,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="439.75,118">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="228,42"
          Id="Package\Sequence Container\Execute SQL Task - Error Demo"
          TopLeft="350,4" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="643,192"
          Size="643,235"
          Id="Package\Sequence Container"
          TopLeft="64,75.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="279.666666666667,310.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33.1666666666666,30"
              Start="0,0"
              End="-33.1666666666666,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.04467887061744" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.04467887061744"
                    Point2="0,12.0446788706174"
                    Point3="-4,12.0446788706174" />
                  <mssgle:LineSegment
                    End="-29.1666666666666,12.0446788706174" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.1666666666666,12.0446788706174"
                    Point2="-33.1666666666666,12.0446788706174"
                    Point3="-33.1666666666666,16.0446788706174" />
                  <mssgle:LineSegment
                    End="-33.1666666666666,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="234,48">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45.6666666666666,27.5"
              Start="0,0"
              End="45.6666666666666,20">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.4590443686007" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.4590443686007"
                    Point2="0,16.4590443686007"
                    Point3="4,16.4590443686007" />
                  <mssgle:LineSegment
                    End="41.6666666666666,16.4590443686007" />
                  <mssgle:CubicBezierSegment
                    Point1="41.6666666666666,16.4590443686007"
                    Point2="45.6666666666666,16.4590443686007"
                    Point3="45.6666666666666,20.4590443686007" />
                  <mssgle:LineSegment
                    End="45.6666666666666,20" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="249,42"
          Id="Package\Script Task - Email Start Notification"
          TopLeft="439,9" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="563.5,51">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-72.1666666666667,24.5"
              Start="0,0"
              End="-72.1666666666667,17">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.6635122556624" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.6635122556624"
                    Point2="0,14.6635122556624"
                    Point3="-4,14.6635122556624" />
                  <mssgle:LineSegment
                    End="-68.1666666666667,14.6635122556624" />
                  <mssgle:CubicBezierSegment
                    Point1="-68.1666666666667,14.6635122556624"
                    Point2="-72.1666666666667,14.6635122556624"
                    Point3="-72.1666666666667,18.6635122556624" />
                  <mssgle:LineSegment
                    End="-72.1666666666667,17" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="244,42"
          Id="Package\Script Task - Email End Notification"
          TopLeft="450,338.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="491.333333333333,310.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="80.6666666666667,28"
              Start="0,0"
              End="80.6666666666667,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.24170027924294" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.24170027924294"
                    Point2="0,11.2417002792429"
                    Point3="4,11.2417002792429" />
                  <mssgle:LineSegment
                    End="76.6666666666667,11.2417002792429" />
                  <mssgle:CubicBezierSegment
                    Point1="76.6666666666667,11.2417002792429"
                    Point2="80.6666666666667,11.2417002792429"
                    Point3="80.6666666666667,15.2417002792429" />
                  <mssgle:LineSegment
                    End="80.6666666666667,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="253,42"
          Id="Package.EventHandlers[OnError]\Execute SQL Task - Logging on Error"
          TopLeft="188,143" />
        <NodeLayout
          Size="209,42"
          Id="Package.EventHandlers[OnError]\Script Task - Email on Error"
          TopLeft="194,27" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Execute SQL Task - Start time Logging.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="{b6fb1931-bb66-4fd1-b689-3d3ca6aa4979}"
          TopLeft="234.5,28.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task - If Exist">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,42"
          Id="Package\Sequence Container\Data Flow Task - If Exist\OData Source"
          TopLeft="44.5,21.5" />
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Data Flow Task - If Exist\Row Count"
          TopLeft="48,201" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Data Flow Task - If Exist\Derived Column"
          TopLeft="41,104" />
        <NodeLayout
          Size="171,42"
          Id="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination"
          TopLeft="30,279" />
        <NodeLayout
          Size="272,42"
          Id="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - OData Error output"
          TopLeft="371,20" />
        <NodeLayout
          Size="286,42"
          Id="Package\Sequence Container\Data Flow Task - If Exist\OLE DB Destination - Derived Col Err output"
          TopLeft="371,109" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - If Exist.Paths[Output]"
          TopLeft="117.25,63.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.5"
              Start="0,0"
              End="0,33">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - If Exist.Paths[Derived Column Output]"
          TopLeft="115.5,146">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - If Exist.Paths[Row Count Output 1]"
          TopLeft="114.25,243">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - If Exist.Paths[Error output]"
          TopLeft="188.5,41.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="182.5,0"
              Start="0,0"
              End="175,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="175,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="59.98861328125,5,55.0227734375,11.2822265625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - If Exist.Paths[Derived Column Error Output]"
          TopLeft="195,127.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="176,0"
              Start="0,0"
              End="168.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="168.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="19.28861328125,5,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Data Flow Task - If Exist.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{a809ca5a-4b0d-4b8f-abb6-cd8109d2b3c3}"
          TopLeft="183.555555555556,126.777777777778" />
        <NodeLayout
          Size="261,42"
          Id="{62f4882b-0f4a-453c-a74f-ee55823a1892}"
          TopLeft="183.555555555556,24.7777777777778" />
        <NodeLayout
          Size="209,42"
          Id="{b5b9f8c1-7271-49d4-a1c8-f4586fbd4a0a}"
          TopLeft="235.555555555556,214.777777777778" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task - if not Exist">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,42"
          Id="Package\Sequence Container\Data Flow Task - if not Exist\OData Source"
          TopLeft="67,15" />
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Data Flow Task - if not Exist\Row Count"
          TopLeft="70.5,194.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Data Flow Task - if not Exist\Derived Column"
          TopLeft="63.5,97.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination"
          TopLeft="52.5,272.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Output]"
          TopLeft="139.75,57">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.5"
              Start="0,0"
              End="0,33">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Derived Column Output]"
          TopLeft="138,139.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Row Count Output 1]"
          TopLeft="136.75,236.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="272,42"
          Id="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output"
          TopLeft="393.5,13.5" />
        <NodeLayout
          Size="286,42"
          Id="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output"
          TopLeft="393.5,102.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Error output]"
          TopLeft="211,35.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="182.5,0"
              Start="0,0"
              End="175,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="175,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="59.98861328125,5,55.0227734375,11.2822265625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task - if not Exist.Paths[Derived Column Error Output]"
          TopLeft="217.5,121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="176,0"
              Start="0,0"
              End="168.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="168.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="19.28861328125,5,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Data Flow Task - if not Exist.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{1762d192-983d-4053-ac07-3bce6a35c55a}"
          TopLeft="210,111" />
        <NodeLayout
          Size="261,42"
          Id="{307c7a53-2481-4532-8199-aa643d12ff06}"
          TopLeft="194,26" />
        <NodeLayout
          Size="209,42"
          Id="{90929c33-0eb5-44ac-9370-d214d57e1a42}"
          TopLeft="262,178" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Execute SQL Task - Checking Row.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{44823da6-596d-47b7-8aa7-4116dd8b3104}"
          TopLeft="190,133" />
        <NodeLayout
          Size="261,42"
          Id="{b14a63d7-6c14-49b1-9ba1-4a7db0dbf2c0}"
          TopLeft="184,33" />
        <NodeLayout
          Size="209,42"
          Id="{e85af85c-f29f-45b9-b085-3f4a66d6fe4d}"
          TopLeft="207,241" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Execute SQL Task - Delete.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{15907fd0-c22b-4828-9191-804c66071279}"
          TopLeft="144,120" />
        <NodeLayout
          Size="261,42"
          Id="{98145258-2529-4136-ba1c-a44cbdc35048}"
          TopLeft="134,20" />
        <NodeLayout
          Size="209,42"
          Id="{27c4f5ce-e392-4cf6-bd06-670dcf165a9a}"
          TopLeft="186,232" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Script Task - Email Start Notification.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{c7875ae2-ca0a-4fb2-9848-94addc16e200}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\Script Task - Email End Notification.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="{582454b7-9b24-4a66-9a92-5a527e19684f}"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - OData Error output">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task - if not Exist\OLE DB Destination - Derived Col Err output">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]\Script Task - Email on Error.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="259,42"
          Id="Package.EventHandlers[OnError]\Script Task - Email on Error.EventHandlers[OnError]\Execute SQL Task - End Time Logging"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>